createdAt: "2019-08-22T08:14:43.971Z"
updatedAt: "2019-08-22T08:14:53.757Z"
type: "MARKDOWN_NOTE"
folder: "bf93f19defc7f18d7b8b"
title: "How To Install Cloudera CDH Sandbox"
tags: []
content: '''
  # How To Install Cloudera CDH Sandbox
  ### 1. Enable Root Login
  ```
  vim /etc/ssh/sshd_config
  # add "PermitRootLogin yes" to the file
  service ssh reload
  ```
  ### 2. Set hostname in /etc/hostname
  ### 3. Add IP, hostname to /etc/hosts
  ### 4. Add cloudera 6.0.0 repository
  ```
  cd /etc/apt/sources.list.d/
  wget https://archive.cloudera.com/cm6/6.0.0/ubuntu1604/apt/cloudera-manager.list
  cd ~/
  ```
  ### 5. Add Cloudera archive key
  ```
  wget https://archive.cloudera.com/cm6/6.0.0/ubuntu1604/apt/archive.key
  sudo apt-key add archive.key
  sudo apt-get update
  ```
  ### 6. Install Java 8 (if needed) and Cloudera Daemons, Server, Agents (since standalone mode, install all packages on one host)
  ```
  sudo apt-get install oracle-j2sdk1.8
  sudo apt-get install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server
  ```
  ### 7. Set JAVA_HOME and TLS 
  ```
  sudo JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 /opt/cloudera/cm-agent/bin/certmanager setup --configure-services
  # check /var/log/cloudera-scm-agent/certmanager.log to see if tls is enabled
  ```
  ### 8. Install any RDBMS, I uses MYSQL here
  ```
  # give root password ‘root’
  sudo apt-get install mysql-server
  ```
  ### 9. Remove and backup mysql log file
  ```
  sudo service mysql stop
  mkdir /var/lib/mysql/mysql_logfile_backup
  mv /var/lib/mysql/ib_logfile0 /var/lib/mysql/mysql_logfile_backup/ib_logfile0
  mv /var/lib/mysql/ib_logfile1 /var/lib/mysql/mysql_logfile_backup/ib_logfile1
  ```
  ### 10. Configure MYSQL my.cnf file for adapting Cloudera
  ```
  #add below Statement to my.cnf
  #################Statement Start####################
  [mysqld]
  datadir=/var/lib/mysql
  socket=/var/run/mysqld/mysqld.sock
  transaction-isolation = READ-COMMITTED
  # Disabling symbolic-links is recommended to prevent assorted security risks;
  # to do so, uncomment this line:
  symbolic-links = 0
    
  key_buffer_size = 32M
  max_allowed_packet = 32M
  thread_stack = 256K
  thread_cache_size = 64
  query_cache_limit = 8M
  query_cache_size = 64M
  query_cache_type = 1
    
  max_connections = 550
  #expire_logs_days = 10
  #max_binlog_size = 100M
    
  #log_bin should be on a disk with enough free space.
  #Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your
  #system and chown the specified folder to the mysql user.
  log_bin=/var/lib/mysql/mysql_binary_log
    
  #In later versions of MySQL, if you enable the binary log and do not set
  #a server_id, MySQL will not start. The server_id must be unique within
  #the replicating group.
  server_id=1
    
  binlog_format = mixed
    
  read_buffer_size = 2M
  read_rnd_buffer_size = 16M
  sort_buffer_size = 8M
  join_buffer_size = 8M
    
  # InnoDB settings
  innodb_file_per_table = 1
  innodb_flush_log_at_trx_commit  = 2
  innodb_log_buffer_size = 64M
  innodb_buffer_pool_size = 4G
  innodb_thread_concurrency = 8
  innodb_flush_method = O_DIRECT
  innodb_log_file_size = 512M
    
  [mysqld_safe]
  log-error=/var/log/mysqld.log
  pid-file=/var/run/mysqld/mysqld.pid
    
  sql_mode=STRICT_ALL_TABLES
  #################Statement End####################
  ```
  ### 11. Enable start on boot for MYSQL
  ```
  sudo apt-get install sysv-rc-conf
  sysv-rc-conf mysql on
  ```
  ### 12. Configure MYSQL login mechanism
  ```
  sudo service mysql start
  sudo /usr/bin/mysql_secure_installation
  # When prompt for "enter root password" : root
  # Answer in order: N Y (enter ‘root’） Y N Y Y
  ```
  ### 13. Install MYSQL JDBC driver
  ```
  sudo apt-get install libmysql-java
  ```
  ### 14. Create Table for CDH
  ```
  #login to the database
  $ mysql -u root -p
   
  #Enter below Statement
  #################Statement Start####################
  CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON scm.* TO 'scm'@'%' IDENTIFIED BY 'scm_password';
    
  CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON amon.* TO 'amon'@'%' IDENTIFIED BY 'amon_password';
    
  CREATE DATABASE rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON rman.* TO 'rman'@'%' IDENTIFIED BY 'rman_password';
    
  CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON hue.* TO 'hue'@'%' IDENTIFIED BY 'hue_password';
    
  CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON metastore.* TO 'hive'@'%' IDENTIFIED BY 'hive_password';
    
  CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON sentry.* TO 'sentry'@'%' IDENTIFIED BY 'sentry_password';
    
  CREATE DATABASE nav DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON nav.* TO 'nav'@'%' IDENTIFIED BY 'nav_password';
    
  CREATE DATABASE navms DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON navms.* TO 'navms'@'%' IDENTIFIED BY 'navms_password';
    
  CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
  GRANT ALL ON oozie.* TO 'oozie'@'%' IDENTIFIED BY 'oozie_password';
  #################Statement End####################
  ```
  ### 15. Auto-prepare the scm table for CDH
  ```
  sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm
  ```
  ### 16. Start Cloudera Server
  ```
  sudo systemctl start cloudera-scm-server
  # visit <hostip>:7180 for Cloudera Manager Web UI
  ```
'''
linesHighlighted: []
isStarred: false
isTrashed: false
